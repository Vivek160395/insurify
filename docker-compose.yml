version: "3.3"
services:
  rabbitmq:
    image: rabbitmq:3.7.5-management
    container_name: rabbitmq-container
    network_mode: "host"
    hostname: localhost
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST:
    ports:
      - 5672:5672
      - 15672:15672

  mysqlservice:
    image: mysql:latest
    container_name: mysql-container
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: insurifyd
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  mongodbservice:
    image: mongo:latest
    container_name: mongo-container
    network_mode: host
    hostname: localhost
    ports:
      - 27017:27017

  neo4j:
    image: neo4j:4.2.3
    container_name: neo4j
    restart: always
    network_mode: "host"
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      NEO4J_AUTH: neo4j/Insurance

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300


  user-service:
    container_name: user-service
    build: user-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8085:8085
    depends_on:
      - mongodbservice
    restart: always

  authentication-service:
    container_name: authentication-service
    build: authentication-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8086:8086
    depends_on:
      - mysqlservice
    restart: always

  insurance-service:
    container_name: insurance-service
    build: insurance-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8010:8010
    depends_on:
      - elasticsearch
    restart: always

  policy-advisor-service:
    container_name: policy-advisor-service
    build: policy-advisor-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8087:8087
    depends_on:
      - mongodbservice
    restart: always

  purchase-insurance-service:
    container_name: ppurchase-insurance-service
    build: purchase-insurance-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8084:8084
    depends_on:
      - mongodbservice
    restart: always

  payment-service:
    container_name: payment-service
    build: payment-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8025:8025
    depends_on:
      - mongodbservice
    restart: always

  recommendation-service:
    container_name: recommendation-service
    build: recommendation-service/
    hostname: localhost
    network_mode: host
    ports:
      - 9999:9999
    depends_on:
      - neo4j
    restart: always

  email-service:
    container_name: email-service
    build: email-service/
    hostname: localhost
    network_mode: host
    ports:
      - 8040:8040
    restart: always

  chat-service:
    container_name: chat-service
    build: chat-service/
    hostname: localhost
    network_mode: host
    depends_on:
      - mongodbservice
    ports:
      - 9090:9090
    restart: always

  eureka-server:
    build: eureka-server/
    container_name: eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8761:8761

  api-gateway:
    build: api-gateway/
    container_name: api-gateway
    depends_on:
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8080:8080
  product-webapp:
    build:   product-webapp/
    container_name:   product-webapp
    depends_on:
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 4200:4200



